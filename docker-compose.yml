services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && gunicorn data_api.wsgi:application --bind 0.0.0.0:8000"
    ports: ["8000:8000"]
    env_file: [.env]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A data_api worker -l info
    env_file: [.env]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A data_api beat -l info
    env_file: [.env]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  db:
    image: postgres:16-bookworm
    environment:
      POSTGRES_DB: postgres_latest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres_latest"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: always

  redis:
    image: redis:6-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: always
