"""
Django settings for data_api project.

Generated by 'django-admin startproject' using Django 5.1.11.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from celery.schedules import crontab


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET')

#SECRET_KEY = 'sdgsdkgmsgms'

if not SECRET_KEY:
    raise RuntimeError("DJANGO_SECRET is required")  
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "0").lower() in ("1", "true")  # provided by env_file [web:62][web:149]

ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "127.0.0.1 localhost api.visualize.energy visualize.energy 192.168.1.49 192.168.1.35").split()  

CORS_ALLOWED_ORIGINS = [   
    "http://localhost:5173",
    "http://localhost:8080",
    "http://127.0.0.1:8000",
    "http://85.14.6.37:16602",
    "http://159.89.103.242",
    "http://visualize.energy",
    "https://visualize.energy"
]
CSRF_TRUSTED_ORIGINS = [
    "https://visualize.energy",
    "https://api.visualize.energy",
]

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    'entsoe_api',
    'rest_framework',
    'django_filters',   
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'data_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'data_api.wsgi.application'



REST_FRAMEWORK = {
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
    ],
    # # optional pagination (nice for big lists)
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    # "PAGE_SIZE": 100,
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "HOST": os.getenv("DB_HOST", "localhost"),
        "PORT": os.getenv("DB_PORT", "5432"),
        "NAME": os.getenv("DB_NAME", "postgres"),
        "USER": os.getenv("DB_USER", "postgres"),
        "PASSWORD": os.getenv("DB_PASSWORD", "postgres"),
    }
}



CELERY_BEAT_SCHEDULE = {
    "fetch_installed_capacity_daily": {
        "task": "entsoe_api.tasks.fetch_installed_capacity_task",
        "schedule": crontab(hour=3, minute=0),
    },
    "fetch_prices_daily": {
        "task": "entsoe_api.tasks.fetch_prices_daily_task",
        "schedule": crontab(hour=10, minute=39),   
    },
}


CELERY_TIMEZONE = "Europe/Sofia"
CELERY_ENABLE_UTC = True  # keep True; Celery handles conversions

CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_BACKEND", "redis://redis:6379/0")


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


ENTSOE_PRICE_COUNTRY_TO_EICS = {
    "DE": "10Y1001A1001A82H",  # DE-LU BZN
    "LU": "10Y1001A1001A82H",  # same price zone as DE
    "IT": "10Y1001A1001A73I",
    "AT": "10YAT-APG------L",
    "BG": "10YCA-BULGARIA-R",
    "CZ": "10YCZ-CEPS-----N",
    "EE": "10Y1001A1001A39I",
    "ES": "10YES-REE------0",
    "FI": "10YFI-1--------U",
    "FR": "10YFR-RTE------C",
    "GB": "10YGB----------A",
    "GR": "10YGR-HTSO-----Y",
    "HR": "10YHR-HEP------M",
    "HU": "10YHU-MAVIR----U",
    "IE": "10YIE-1001A00010",
    "LT": "10YLT-1001A0008Q",
    "LV": "10YLV-1001A00074",
    "MD": "10Y1001A1001A990",
    "ME": "10YCS-CG-TSO---S",
    "MK": "10YMK-MEPSO----8",
    "MT": "10Y1001A1001A93C",
    "NL": "10YNL----------L",
    "PL": "10YPL-AREA-----S",
    "PT": "10YPT-REN------W",
    "RO": "10YRO-TEL------P",
    "RS": "10YCS-SERBIATSOV",
    "SI": "10YSI-ELES-----O",
    "SK": "10YSK-SEPS-----K",
    "TR": "10YTR-TEIAS----W",
    "UA": "10Y1001C--00003F",
    "XK": "10Y1001C--00100H",
    "GE": "10Y1001A1001B012",

    # Multi-BZN countries
    "DK": ["10YDK-1--------W", "10YDK-2--------M"],
    "NO": [
        "10YNO-1--------2",  # NO1
        "10YNO-2--------T",  # NO2
        "10YNO-3--------J",  # NO3
        "10YNO-4--------9",  # NO4
        "10Y1001A1001A48H",  # NO5
    ],
    "SE": [
        "10Y1001A1001A44P",  # SE1
        "10Y1001A1001A45N",  # SE2
        "10Y1001A1001A46L",  # SE3
        "10Y1001A1001A47J",  # SE4
    ],
    "IT": [
        "10Y1001A1001A73I",  # NORD
        "10Y1001A1001A70O",  # CNOR
        "10Y1001A1001A71M",  # CSUD
        "10Y1001A1001A788",  # SUD
        "10Y1001A1001A75E",  # SICI
        "10Y1001A1001A74G",  # SARD
    ],
}

# CAPACITY / GENERATION mapping (A68/A75) â€” control areas or BZNs as appropriate
ENTSOE_COUNTRY_TO_EICS = {
    "AL": "10YAL-KESH-----5",
    "AT": "10YAT-APG------L",
    "BA": "10YBA-JPCC-----D",
    "BE": "10YBE----------2",
    "BG": "10YCA-BULGARIA-R",
    "BY": "10Y1001A1001A51S",
    "CH": "10YCH-SWISSGRIDZ",
    "CY": "10YCY-1001A0003J",
    "CZ": "10YCZ-CEPS-----N",
    "DE": [  # Germany = 4 TSOs (for gen/capacity, not for prices)
        "10YDE-VE-------2",   # 50Hertz
        "10YDE-RWENET---I",   # Amprion
        "10YDE-EON------1",   # TenneT GER
        "10YDE-ENBW-----N",   # TransnetBW
    ],
    "DK": ["10YDK-1--------W", "10YDK-2--------M"],
    "EE": "10Y1001A1001A39I",
    "ES": "10YES-REE------0",
    "FI": "10YFI-1--------U",
    "FR": "10YFR-RTE------C",
    "GB": "10YGB----------A",
    "GR": "10YGR-HTSO-----Y",
    "HR": "10YHR-HEP------M",
    "HU": "10YHU-MAVIR----U",
    "IE": "10YIE-1001A00010",
    "LT": "10YLT-1001A0008Q",
    "LU": "10YLU-CEGEDEL-NQ",
    "LV": "10YLV-1001A00074",
    "MD": "10Y1001A1001A990",
    "ME": "10YCS-CG-TSO---S",
    "MK": "10YMK-MEPSO----8",
    "MT": "10Y1001A1001A93C",
    "NL": "10YNL----------L",
    "NO": [
        "10YNO-1--------2",  # NO1
        "10YNO-2--------T",  # NO2
        "10YNO-3--------J",  # NO3
        "10YNO-4--------9",  # NO4
        "10Y1001A1001A48H",  # NO5
    ],
    "PL": "10YPL-AREA-----S",
    "PT": "10YPT-REN------W",
    "RO": "10YRO-TEL------P",
    "RS": "10YCS-SERBIATSOV",
    "SE": [
        "10Y1001A1001A44P",  # SE1
        "10Y1001A1001A45N",  # SE2
        "10Y1001A1001A46L",  # SE3
        "10Y1001A1001A47J",  # SE4
    ],
    "SI": "10YSI-ELES-----O",
    "SK": "10YSK-SEPS-----K",
    "TR": "10YTR-TEIAS----W",
    "UA": "10Y1001C--00003F",
    "XK": "10Y1001C--00100H",
    "GE": "10Y1001A1001B012",
}